// Generated by Framer (cf240c2)

import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, CycleVariantState, getFonts, getPropertyControls, Link, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { Icon as Phosphor } from "https://framerusercontent.com/modules/tYScH7LTqUtz5KUaUAYP/p8dptk4UIND8hbFWz9V7/Phosphor.js";
const PhosphorFonts = getFonts(Phosphor);
const PhosphorControls = getPropertyControls(Phosphor);

const enabledGestures = {GuoJAxqgg: {hover: true}, reOm6JSMq: {hover: true}, vEDIx70kL: {hover: true}};

const cycleOrder = ["vEDIx70kL", "reOm6JSMq", "GuoJAxqgg"];

const serializationHash = "framer-rvhQB"

const variantClassNames = {GuoJAxqgg: "framer-v-9rlyw3", reOm6JSMq: "framer-v-17vmc24", vEDIx70kL: "framer-v-115jsc1"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const humanReadableEnumMap = {Bold: "bold", Duotone: "duotone", Fill: "fill", Light: "light", Regular: "regular", Thin: "thin"}

const humanReadableVariantMap = {Default: "vEDIx70kL", Muted: "reOm6JSMq", Primary: "GuoJAxqgg"}

const getProps = ({height, icon, iconWeight, id, link, newTab, tap, width, ...props}) => { return {...props, CCq3GWcg0: tap ?? props.CCq3GWcg0, efHiadNbZ: link ?? props.efHiadNbZ, EVEpv0pIo: icon ?? props.EVEpv0pIo ?? "Check", JU1PLPUN0: newTab ?? props.JU1PLPUN0, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "vEDIx70kL", vet4rO31f: humanReadableEnumMap[iconWeight] ?? iconWeight ?? props.vet4rO31f ?? "light"} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;variant?: keyof typeof humanReadableVariantMap;link?: string;newTab?: boolean;icon?: string;iconWeight?: keyof typeof humanReadableEnumMap;tap?: any; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const { activeLocale, setLocale } = useLocaleInfo()

const {style, className, layoutId, variant, efHiadNbZ, JU1PLPUN0, EVEpv0pIo, vet4rO31f, CCq3GWcg0, ...restProps} = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({cycleOrder, defaultVariant: "vEDIx70kL", enabledGestures, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant)

const onTap1d68c9q = activeVariantCallback(async (...args) => {
setGestureState({isPressed: false})
if (CCq3GWcg0) {const res = await CCq3GWcg0(...args);
if (res === false) return false;}
})

const ref1 = React.useRef<HTMLElement>(null)

const defaultLayoutId = React.useId()

const sharedStyleClassNames = []

const componentViewport = useComponentViewport()

return (<LayoutGroup id={layoutId ?? defaultLayoutId}>
<Variants animate={variants} initial={false}><Transition value={transition1}><Link href={efHiadNbZ} openInNewTab={JU1PLPUN0}><motion.a {...restProps} {...gestureHandlers} className={`${cx(serializationHash, ...sharedStyleClassNames, "framer-115jsc1", className, classNames)} framer-11hr8ku`} data-border data-framer-name={"Default"} data-highlight layoutDependency={layoutDependency} layoutId={"vEDIx70kL"} onTap={onTap1d68c9q} ref={ref ?? ref1} style={{"--border-bottom-width": "1px", "--border-color": "var(--token-68c05b50-ca7b-4173-82aa-ed42aea1a9b4, rgba(218, 197, 167, 0.15))", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", backgroundColor: "rgba(0, 0, 0, 0)", borderBottomLeftRadius: 500, borderBottomRightRadius: 500, borderTopLeftRadius: 500, borderTopRightRadius: 500, ...style}} variants={{"GuoJAxqgg-hover": {"--border-bottom-width": "0px", "--border-left-width": "0px", "--border-right-width": "0px", "--border-top-width": "0px", backgroundColor: "var(--token-ba35ffdc-68bb-41bc-880c-4aa29d4488ec, rgb(20, 20, 19))"}, "reOm6JSMq-hover": {"--border-color": "var(--token-52eaa3b2-9b53-4c12-9790-fce4171dff3e, rgb(78, 76, 71))", backgroundColor: "var(--token-c18e5c55-e670-494b-9afe-b018358f3867, rgb(244, 241, 235))"}, "vEDIx70kL-hover": {"--border-color": "var(--token-52eaa3b2-9b53-4c12-9790-fce4171dff3e, rgb(78, 76, 71))"}, GuoJAxqgg: {"--border-bottom-width": "0px", "--border-left-width": "0px", "--border-right-width": "0px", "--border-top-width": "0px", backgroundColor: "var(--token-dca875b7-f855-43c1-bf73-97596e452266, rgb(203, 251, 69))"}, reOm6JSMq: {"--border-color": "var(--token-68c05b50-ca7b-4173-82aa-ed42aea1a9b4, rgb(51, 51, 48))", backgroundColor: "var(--token-cd2934a7-4e35-4347-a32c-9650fca4db23, rgb(242, 242, 242))"}}} {...addPropertyOverrides({"GuoJAxqgg-hover": {"data-framer-name": undefined}, "reOm6JSMq-hover": {"data-framer-name": undefined}, "vEDIx70kL-hover": {"data-framer-name": undefined}, GuoJAxqgg: {"data-framer-name": "Primary"}, reOm6JSMq: {"data-framer-name": "Muted"}}, baseVariant, gestureVariant)}><ComponentViewportProvider ><motion.div className={"framer-yjkc4m-container"} layoutDependency={layoutDependency} layoutId={"mMxShIB32-container"}><Phosphor color={"var(--token-c5c4fdcb-9482-48bb-aedf-353188472aae, rgb(239, 231, 210))"} height={"100%"} iconSearch={"House"} iconSelection={EVEpv0pIo} id={"mMxShIB32"} layoutId={"mMxShIB32"} mirrored={false} selectByList style={{height: "100%", width: "100%"}} weight={vet4rO31f} width={"100%"} {...addPropertyOverrides({GuoJAxqgg: {color: "var(--token-c5446a54-80de-4f79-b24b-55997bf1fe5e, rgb(10, 11, 10))"}}, baseVariant, gestureVariant)}/></motion.div></ComponentViewportProvider></motion.a></Link></Transition></Variants>
</LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-rvhQB.framer-11hr8ku, .framer-rvhQB .framer-11hr8ku { display: block; }", ".framer-rvhQB.framer-115jsc1 { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 32px; height: 36px; justify-content: center; overflow: visible; padding: 8px 12px 8px 12px; position: relative; text-decoration: none; width: 36px; }", ".framer-rvhQB .framer-yjkc4m-container { flex: none; height: 16px; position: relative; width: 16px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-rvhQB.framer-115jsc1 { gap: 0px; } .framer-rvhQB.framer-115jsc1 > * { margin: 0px; margin-bottom: calc(32px / 2); margin-top: calc(32px / 2); } .framer-rvhQB.framer-115jsc1 > :first-child { margin-top: 0px; } .framer-rvhQB.framer-115jsc1 > :last-child { margin-bottom: 0px; } }", ".framer-rvhQB[data-border=\"true\"]::after, .framer-rvhQB [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 36
 * @framerIntrinsicWidth 36
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]},"reOm6JSMq":{"layout":["fixed","fixed"]},"GuoJAxqgg":{"layout":["fixed","fixed"]},"m7bJtRkyW":{"layout":["fixed","fixed"]},"JQvuFprvH":{"layout":["fixed","fixed"]},"iVet_8P_y":{"layout":["fixed","fixed"]}}}
 * @framerVariables {"efHiadNbZ":"link","JU1PLPUN0":"newTab","EVEpv0pIo":"icon","vet4rO31f":"iconWeight","CCq3GWcg0":"tap"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramereJJBMWyi8: React.ComponentType<Props> = withCSS(Component, css, "framer-rvhQB") as typeof Component;
export default FramereJJBMWyi8;

FramereJJBMWyi8.displayName = "Components/Badge Link (Default)";

FramereJJBMWyi8.defaultProps = {height: 36, width: 36};

addPropertyControls(FramereJJBMWyi8, {variant: {options: ["vEDIx70kL", "reOm6JSMq", "GuoJAxqgg"], optionTitles: ["Default", "Muted", "Primary"], title: "Variant", type: ControlType.Enum}, efHiadNbZ: {title: "Link", type: ControlType.Link}, JU1PLPUN0: {defaultValue: false, title: "New Tab", type: ControlType.Boolean}, EVEpv0pIo: PhosphorControls?.["iconSelection"] && {...PhosphorControls["iconSelection"], defaultValue: "Check", description: undefined, hidden: undefined, title: "Icon"}, vet4rO31f: PhosphorControls?.["weight"] && {...PhosphorControls["weight"], defaultValue: "light", description: undefined, hidden: undefined, title: "Icon Weight"}, CCq3GWcg0: {title: "Tap", type: ControlType.EventHandler}} as any)

addFonts(FramereJJBMWyi8, [{explicitInter: true, fonts: []}, ...PhosphorFonts], {supportsExplicitInterCodegen: true})