// Generated by Framer (ba156f5)

import { addFonts, addPropertyControls, ControlType, cx, getLoadingLazyAtYPosition, Image, Link, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";

const serializationHash = "framer-VJKn7"

const variantClassNames = {CpeSohLeF: "framer-v-6xtryv"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const getProps = ({height, id, link, width, ...props}) => { return {...props, a28gi3Ahz: link ?? props.a28gi3Ahz} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;link?: string; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const { style, className, layoutId, variant, a28gi3Ahz, ...restProps } = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({defaultVariant: "CpeSohLeF", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = []

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><Link href={a28gi3Ahz} motionChild nodeId={"CpeSohLeF"} scopeId={"LTYLc1ufz"}><motion.a {...restProps} {...gestureHandlers} className={`${cx(scopingClassNames, "framer-6xtryv", className, classNames)} framer-1ypskfr`} data-framer-name={"Default"} layoutDependency={layoutDependency} layoutId={"CpeSohLeF"} ref={refBinding} style={{...style}}><Image background={{alt: "", fit: "fill", intrinsicHeight: 31.5, intrinsicWidth: 118.5, loading: getLoadingLazyAtYPosition(((componentViewport?.y || 0) + (4 + ((((componentViewport?.height || 30.5) - 4) - 32) / 2)))), pixelHeight: 1024, pixelWidth: 1024, sizes: `max(${componentViewport?.width || "100vw"}, 1px)`, src: "https://framerusercontent.com/images/s8NocZdDQnsh7J3Pbzu1wSnfE.png?scale-down-to=512", srcSet: "https://framerusercontent.com/images/s8NocZdDQnsh7J3Pbzu1wSnfE.png?scale-down-to=512 512w,https://framerusercontent.com/images/s8NocZdDQnsh7J3Pbzu1wSnfE.png 1024w"}} className={"framer-493dzc"} data-framer-name={"Logo"} layoutDependency={layoutDependency} layoutId={"sEe24pmCc"}/></motion.a></Link></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-VJKn7.framer-1ypskfr, .framer-VJKn7 .framer-1ypskfr { display: block; }", ".framer-VJKn7.framer-6xtryv { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: visible; padding: 4px 0px 0px 0px; position: relative; text-decoration: none; width: 100px; }", ".framer-VJKn7 .framer-493dzc { aspect-ratio: 3.761904761904762 / 1; flex: 1 0 0px; height: var(--framer-aspect-ratio-supported, 27px); overflow: visible; position: relative; width: 1px; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 30.5
 * @framerIntrinsicWidth 100
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]}}}
 * @framerVariables {"a28gi3Ahz":"link"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const FramerLTYLc1ufz: React.ComponentType<Props> = withCSS(Component, css, "framer-VJKn7") as typeof Component;
export default FramerLTYLc1ufz;

FramerLTYLc1ufz.displayName = "Layout/Logo";

FramerLTYLc1ufz.defaultProps = {height: 30.5, width: 100};

addPropertyControls(FramerLTYLc1ufz, {a28gi3Ahz: {title: "Link", type: ControlType.Link}} as any)

addFonts(FramerLTYLc1ufz, [{explicitInter: true, fonts: []}], {supportsExplicitInterCodegen: true})