// Generated by Framer (ba156f5)
import {
    jsx as _jsx
} from "react/jsx-runtime";
import {
    addFonts,
    addPropertyControls,
    ControlType,
    cx,
    getLoadingLazyAtYPosition,
    Image,
    Link,
    useComponentViewport,
    useLocaleInfo,
    useVariantState,
    withCSS
} from "framer";
import {
    LayoutGroup,
    motion,
    MotionConfigContext
} from "framer-motion";
import * as React from "react";
import {
    useRef
} from "react";
const serializationHash = "framer-VJKn7";
const variantClassNames = {
    CpeSohLeF: "framer-v-6xtryv"
};

function addPropertyOverrides(overrides, ...variants) {
    const nextOverrides = {};
    variants ? .forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]));
    return nextOverrides;
}
const transition1 = {
    damping: 60,
    delay: 0,
    mass: 1,
    stiffness: 500,
    type: "spring"
};
const Transition = ({
    value,
    children
}) => {
    const config = React.useContext(MotionConfigContext);
    const transition = value ? ? config.transition;
    const contextValue = React.useMemo(() => ({ ...config,
        transition
    }), [JSON.stringify(transition)]);
    return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
        value: contextValue,
        children: children
    });
};
const Variants = motion.create(React.Fragment);
const getProps = ({
    height,
    id,
    link,
    width,
    ...props
}) => {
    return { ...props,
        a28gi3Ahz: link ? ? props.a28gi3Ahz
    };
};
const createLayoutDependency = (props, variants) => {
    if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
    return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function(props, ref) {
    const fallbackRef = useRef(null);
    const refBinding = ref ? ? fallbackRef;
    const defaultLayoutId = React.useId();
    const {
        activeLocale,
        setLocale
    } = useLocaleInfo();
    const componentViewport = useComponentViewport();
    const {
        style,
        className,
        layoutId,
        variant,
        a28gi3Ahz,
        ...restProps
    } = getProps(props);
    const {
        baseVariant,
        classNames,
        clearLoadingGesture,
        gestureHandlers,
        gestureVariant,
        isLoading,
        setGestureState,
        setVariant,
        variants
    } = useVariantState({
        defaultVariant: "CpeSohLeF",
        ref: refBinding,
        variant,
        variantClassNames
    });
    const layoutDependency = createLayoutDependency(props, variants);
    const sharedStyleClassNames = [];
    const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
    return /*#__PURE__*/ _jsx(LayoutGroup, {
        id: layoutId ? ? defaultLayoutId,
        children: /*#__PURE__*/ _jsx(Variants, {
            animate: variants,
            initial: false,
            children: /*#__PURE__*/ _jsx(Transition, {
                value: transition1,
                children: /*#__PURE__*/ _jsx(Link, {
                    href: a28gi3Ahz,
                    motionChild: true,
                    nodeId: "CpeSohLeF",
                    scopeId: "LTYLc1ufz",
                    children: /*#__PURE__*/ _jsx(motion.a, { ...restProps,
                        ...gestureHandlers,
                        className: `${cx(scopingClassNames,"framer-6xtryv",className,classNames)} framer-1ypskfr`,
                        "data-framer-name": "Default",
                        layoutDependency: layoutDependency,
                        layoutId: "CpeSohLeF",
                        ref: refBinding,
                        style: { ...style
                        },
                        children: /*#__PURE__*/ _jsx(Image, {
                            background: {
                                alt: "",
                                fit: "fill",
                                intrinsicHeight: 31.5,
                                intrinsicWidth: 118.5,
                                loading: getLoadingLazyAtYPosition((componentViewport ? .y || 0) + (4 + ((componentViewport ? .height || 30.5) - 4 - 32) / 2)),
                                pixelHeight: 1024,
                                pixelWidth: 1024,
                                sizes: `max(${componentViewport?.width||"100vw"}, 1px)`,
                                src: "https://framerusercontent.com/images/s8NocZdDQnsh7J3Pbzu1wSnfE.png?scale-down-to=512",
                                srcSet: "https://framerusercontent.com/images/s8NocZdDQnsh7J3Pbzu1wSnfE.png?scale-down-to=512 512w,https://framerusercontent.com/images/s8NocZdDQnsh7J3Pbzu1wSnfE.png 1024w"
                            },
                            className: "framer-493dzc",
                            "data-framer-name": "Logo",
                            layoutDependency: layoutDependency,
                            layoutId: "sEe24pmCc"
                        })
                    })
                })
            })
        })
    });
});
const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-VJKn7.framer-1ypskfr, .framer-VJKn7 .framer-1ypskfr { display: block; }", ".framer-VJKn7.framer-6xtryv { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: visible; padding: 4px 0px 0px 0px; position: relative; text-decoration: none; width: 100px; }", ".framer-VJKn7 .framer-493dzc { aspect-ratio: 3.761904761904762 / 1; flex: 1 0 0px; height: var(--framer-aspect-ratio-supported, 27px); overflow: visible; position: relative; width: 1px; }"];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 30.5
 * @framerIntrinsicWidth 100
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]}}}
 * @framerVariables {"a28gi3Ahz":"link"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const FramerLTYLc1ufz = withCSS(Component, css, "framer-VJKn7");
export default FramerLTYLc1ufz;
FramerLTYLc1ufz.displayName = "Layout/Logo";
FramerLTYLc1ufz.defaultProps = {
    height: 30.5,
    width: 100
};
addPropertyControls(FramerLTYLc1ufz, {
    a28gi3Ahz: {
        title: "Link",
        type: ControlType.Link
    }
});
addFonts(FramerLTYLc1ufz, [{
    explicitInter: true,
    fonts: []
}], {
    supportsExplicitInterCodegen: true
});
export const __FramerMetadata__ = {
    "exports": {
        "default": {
            "type": "reactComponent",
            "name": "FramerLTYLc1ufz",
            "slots": [],
            "annotations": {
                "framerVariables": "{\"a28gi3Ahz\":\"link\"}",
                "framerIntrinsicWidth": "100",
                "framerCanvasComponentVariantDetails": "{\"propertyName\":\"variant\",\"data\":{\"default\":{\"layout\":[\"fixed\",\"auto\"]}}}",
                "framerAutoSizeImages": "true",
                "framerComponentViewportWidth": "true",
                "framerContractVersion": "1",
                "framerIntrinsicHeight": "30.5",
                "framerColorSyntax": "true",
                "framerImmutableVariables": "true",
                "framerDisplayContentsDiv": "false"
            }
        },
        "Props": {
            "type": "tsType",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}
//# sourceMappingURL=./LTYLc1ufz.map