import{a as be,b as we}from"https://app.framerstatic.com/chunk-PPD7JV62.mjs";import{b as z,d as Ne,f as Pe}from"https://app.framerstatic.com/chunk-US5TF3B5.mjs";import{b as Re,e as L}from"https://app.framerstatic.com/chunk-4AYVGW7R.mjs";import{a as Le,c as De}from"https://app.framerstatic.com/chunk-P6LO7Y3T.mjs";import{a as Ee}from"https://app.framerstatic.com/chunk-4VZV62QQ.mjs";import{Ag as B,O as ee,ig as V,rd as ye,sg as Se,ug as te,vg as re,wg as ne,xg as T,yg as se}from"https://app.framerstatic.com/chunk-6YTQAM34.mjs";import{f as Te}from"https://app.framerstatic.com/chunk-R57RKM33.mjs";import{Db as pe,Hb as ge,Rm as ve,Sm as Z,Tm as Ce,tj as fe,ua as ue}from"https://app.framerstatic.com/chunk-ZK325ET3.mjs";import{H as U}from"https://app.framerstatic.com/chunk-MM3XA4KU.mjs";import{d as me,i as k}from"https://app.framerstatic.com/chunk-ZQUNXESX.mjs";import{a as Je}from"https://app.framerstatic.com/chunk-M7LXWNTO.mjs";import{f as O}from"https://app.framerstatic.com/chunk-PFHOMMMY.mjs";import{ba as he,ca as A,e as le,t as v}from"https://app.framerstatic.com/chunk-GQILM44Y.mjs";import{a as h,b as ce}from"https://app.framerstatic.com/chunk-WNSBRACC.mjs";import{e as Ge,j as o}from"https://app.framerstatic.com/chunk-AHQIRSXG.mjs";var ie=v("app");function dt(i){return i.treeReflectsDocument?He(i.tree):null}function He(i){return i.toJS()}function ct(i){function e(t){let{__class:r,width:n,height:s,top:a,bottom:d,left:c,right:l}=t,{children:u}=t;return u?(u=u.map(e),{__class:r,width:n,height:s,top:a,bottom:d,left:c,right:l,children:u}):t.styledText?{__class:r,width:n,height:s,top:a,bottom:d,left:c,right:l,text:t.styledText.blocks.map(m=>m.text)}:{__class:r,width:n,height:s,top:a,bottom:d,left:c,right:l}}return e(i.tree.toJS().root)}function lt(i){let e,t=new XMLHttpRequest;t.open("GET",i.toString(),!1);try{t.send(),e=JSON.parse(t.responseText)}catch(r){ie.error(`Retrieving document \u201C${i}\u201D failed. (${r})`)}return oe(e)}function xe(i){O.isTest||i.forEach(e=>{ie.warn("[repaired]",e)})}function oe(i){let e=[];try{let t=z(i,e);return xe(e),t}catch(t){throw xe(e),ie.warn("tree failed to verify:",t),t}}var $e=v("DocumentLoader"),ae=v("remote:verify"),q=class{constructor(e,t){this.data=e;this.settings=t;o(this,"parser");o(this,"canvasTreeVersion",0);this.parser=new De(e),this.canvasTreeVersion=this.parser.version}readFirstPage(){let e=!1,t=[];if(this.settings.activeNodeId&&(t.push(...this.parser.getPagesContainingId(this.settings.activeNodeId)),e=t.some(r=>we(this.parser.getShallowPage(r)))),!e){let r=be(this.parser.getShallowPages(),this.parser.getHomePageNodeID());t.push(r.id)}return $e.debug("loadPartialDocument():",t),Pe(this.parser,t,this.settings.treeServices)}getScopesToLoad(){return this.parser.getPagesToLoad()}getParsedPageById(e){return this.parser.getParsedPageById(e)}buildPage(e){if(!e)return;let t=[],r=ae.isLoggingTraceMessages()?[]:void 0,n=V(e,this.parser.root.id,{extraChecksAndFixes:!0,errors:t,warnings:r});if(n&&Ne(n,t),t.length>0&&ae.warn("errors loading server tree: "+t.join(`
`)),r&&r.length>0&&ae.trace("warnings loading server tree: "+r.join(`
`)),!!n)return n}};var M=class extends Error{constructor(){super("cancelled"),this.name="CancelledError"}},W=class{constructor(e){this.requestIdleCallback=e;o(this,"resumePromiseResolve");o(this,"resumePromise");o(this,"backgroundMode",!1);o(this,"done",!1);o(this,"firstError");o(this,"debugStepListener")}debugResumeOneStep(){this.resume(),this.pause()}currentMode(){return this.backgroundMode?"slow":"fast"}isDone(){return!!this.firstError||this.done}isSuccess(){return!this.firstError&&this.done}isCancelled(){return!!this.firstError&&this.firstError instanceof M}isError(){return!!this.firstError&&!(this.firstError instanceof M)}getError(){return this.firstError}cancel(){this.isDone()||(this.firstError=new M)}error(e){return this.isDone()||(this.firstError=e),e}pause(){this.firstError||this.resumePromise||(this.resumePromise=new Promise(e=>{this.resumePromiseResolve=e}))}resume(){let e=this.resumePromiseResolve;e&&(this.resumePromise=void 0,this.resumePromiseResolve=void 0,e())}isPaused(){return!!this.resumePromise}fast(){this.backgroundMode=!1}slow(){this.backgroundMode=!0}async run(e){h(!this.isDone(),"task is already done");try{await e()}catch(t){throw t instanceof Error?this.error(t):this.error(new Error(String(t??"Unknown Error")))}finally{this.done=!0}}async sleep(e){if(this.debugStepListener?.(),await le(e),this.resumePromise&&await this.resumePromise,this.debugStepListener?.(),this.resumePromise&&await this.resumePromise,this.firstError)throw this.firstError}async yield(){if(this.debugStepListener?.(),this.resumePromise?await this.resumePromise:this.backgroundMode?await new Promise(e=>{this.requestIdleCallback?this.requestIdleCallback(e):typeof requestIdleCallback=="function"?requestIdleCallback(e):setTimeout(e,0)}):await A(),this.resumePromise&&await this.resumePromise,this.debugStepListener?.(),this.resumePromise&&await this.resumePromise,this.firstError)throw this.firstError}};var g=v("DocumentLoader"),Xe=10,Ie=1e3;function _(i){return i<1024*.75?`${Math.round(i)}b`:i<1024*1024*.75?`${(i/1024).toFixed(2)}kb`:`${(i/1024/1024).toFixed(2)}Mb`}function w(i){return i<200?`${i.toFixed(1)}ms`:i<20*1e3?`${(i/1e3).toFixed(3)}s`:`${Math.round(i/1e3)}s`}var ke=class extends Re{constructor(t,r,n){super();this.treeVersion=t;this.documentURL=r;this.settings=n;o(this,"scheduler");o(this,"retryCount",0);o(this,"scopesToLoad",new Set);o(this,"prioritizedScopeIds",new Set);o(this,"currentLoadingScope");o(this,"partialParser");o(this,"canvasTreeVersion",0);o(this,"documentSize",0);o(this,"loadedFirstScope",!1);o(this,"loadingDuration",0);o(this,"parsingDuration",0);o(this,"debugPaused",!1);o(this,"loadingScopesPaused",!1);o(this,"loadAllDataPriority",0);o(this,"updatePauseResumeState",()=>{if(!this.loadedFirstScope){this.scheduler.fast(),this.scheduler.resume();return}let t=this.loadAllDataPriority>0||this.prioritizedScopeIds.size>0,r=this.loadingScopesPaused||this.debugPaused;t?this.scheduler.fast():this.scheduler.slow(),t||!r||this.scopesToLoad.size<=0?this.scheduler.resume():this.scheduler.pause()});o(this,"tree");o(this,"loadCallbacksPerScope",new Map);o(this,"addedByDiff",new Set);o(this,"removedByDiff",new Set);this.scheduler=new W(n.requestIdleCallback),g.debug("new:",this.treeVersion,this.documentURL)}pauseLoadingScopes(){this.loadingScopesPaused||(this.loadingScopesPaused=!0,g.debug("pauseLoadingScopes"),this.updatePauseResumeState())}resumeLoadingScopes(){this.loadingScopesPaused&&(this.loadingScopesPaused=!1,g.debug("resumeLoadingScopes"),this.updatePauseResumeState())}prioritizeLoadingAllData(t){let r="preload"in t&&t.preload;if(r&&U.isOn("debugEditWhileNeverLoadingRest"))return()=>{};let n=performance.now(),s=this.numberOfScopesToLoad();this.loadAllDataPriority=Math.max(1,this.loadAllDataPriority+1),g.debug("prioritizeLoadingScopes:",this.loadAllDataPriority),this.updatePauseResumeState();let a=r||"doNotTrack"in t&&t.doNotTrack,d=!1,c=a?void 0:this.afterAllDataLoaded(()=>{if(d)return;h("operationName"in t,"operationName is required");let u=performance.now()-n;Te("fulltree_force_load",{operationName:t.operationName,durationMs:u,background:t.operationInBackground,shallowScopesCount:s})});return()=>{d||(d=!0,c?.(),this.stopPrioritizingLoadingAllData())}}stopPrioritizingLoadingAllData(){this.loadAllDataPriority-=1,g.debug("stopPrioritizingLoadingScopes:",this.loadAllDataPriority),this.updatePauseResumeState()}debugPause(){this.debugPaused||(this.debugPaused=!0,g.debug("debugPause"),this.updatePauseResumeState())}debugResume(){this.debugPaused&&(this.debugPaused=!1,g.debug("debugResume"),this.updatePauseResumeState())}isDebugPaused(){return this.debugPaused}afterAllDataLoaded(t){let r=this.scopesToLoad.size===0;if(t){if(r){let n=!1;return queueMicrotask(()=>{n||t()}),()=>{n=!0}}return this.once("loadedAllData",t),()=>{this.off("loadedAllData",t)}}return r?Promise.resolve():new Promise(n=>{this.once("loadedAllData",n)})}async start(){await this.scheduler.run(async()=>{g.debug("start"),L("parsingInit"),this.updatePauseResumeState();let t=performance.now(),r=await this.loadData();if(this.loadingDuration=performance.now()-t,await this.scheduler.yield(),!this.settings.partialParsing||!Le(r))return this.parseFullDocumentSync(r);let n=await this.loadDocumentVersion(r);for(await this.scheduler.yield(),this.tree=await this.loadFirstTree(n),this.loadedFirstScope=!0,this.updatePauseResumeState(),await this.scheduler.yield(),L("parsingResume");this.hasNextScopeToLoad();)await this.loadNextScopeAsync(n),await this.scheduler.yield();await this.emitWrapped(()=>{h(this.tree,"tree must have been set"),this.tree.setService("loader",void 0),this.emit("loadedAllData")}),g.debug("done",_(this.documentSize),"loading:",w(this.loadingDuration),"parsing:",w(this.parsingDuration))})}async loadData(){if(this.settings.loadedData)return this.settings.loadedData;g.debug("Document in cache is not up to date. Tree version:",this.treeVersion);let t=this.settings.initData,r=t?.version===this.treeVersion,n=t?.prefetchPromise;if(t&&delete t.prefetchPromise,r&&n){g.debug("loadData: prefetch");let c=await n;n.then(u=>u.duration).then(u=>{L("dataLoad",u)}),await this.scheduler.yield();let l=await c.text;return await this.scheduler.yield(),c.status<200&&c.status>=300?this.handleErrorAndRetry(c.status,l):l}g.debug("loadData: fetch");let s;this.settings.refreshAccessToken&&(s=await this.settings.refreshAccessToken({}),await this.scheduler.yield());let a=await fetch(this.documentURL,s);await this.scheduler.yield();let d=await a.text();return await this.scheduler.yield(),L("dataLoad"),a.status<200||a.status>=300?this.handleErrorAndRetry(a.status,d):d}async handleErrorAndRetry(t,r){let n=!1;try{n=JSON.parse(r).retry}catch{}if(n&&this.retryCount<Xe)return g.debug("onErrorStatusLoaded, retry:",this.retryCount),await this.scheduler.sleep(this.retryCount*Ie+Math.random()*Ie),this.retryCount+=1,this.loadData();throw Error(n?"Too many retries":`Fetch Error: ${t} - ${r}`)}parseFullDocumentSync(t){let r=performance.now();this.documentSize=t.length;let n=JSON.parse(t);if(!me(n.version))throw Error("cannot read document version");if(this.canvasTreeVersion=n.version,g.debug("parseFullDocumentSync",this.canvasTreeVersion,_(this.documentSize),w(this.loadingDuration)),this.emit("loadedDocumentVersion",n.version),this.scheduler.isDone())return;let s=oe(n);this.emit("loadedFirstData",s),!this.scheduler.isDone()&&(this.emit("loadedAllData"),this.parsingDuration+=performance.now()-r,L("parsingFirstPage"),g.debug("done",_(this.documentSize),"loading:",w(this.loadingDuration),"parsing:",w(this.parsingDuration)))}hasLoadedScope(t){let r=this.scopesToLoad.has(t),n=this.currentLoadingScope?.id===t;return!r&&!n}numberOfScopesToLoad(){return this.scopesToLoad.size}prioritizeLoadingScope(t,r){let n,s;if(typeof r=="function")this.addScopeLoadCallback(t,r);else if(r&&"onLoaded"in r)this.addScopeLoadCallback(t,r.onLoaded),s=r;else{let a=he();n=a,this.addScopeLoadCallback(t,a.resolve),s=r}if(!(s?.preload&&U.isOn("debugEditWhileNeverLoadingRest")))return this.scopesToLoad.has(t)&&(this.prioritizedScopeIds.add(t),this.updatePauseResumeState(),this.addScopeLoadCallback(t,this.updatePauseResumeState)),n}nextScopeIdToLoad(){for(let r of this.prioritizedScopeIds)if(this.prioritizedScopeIds.delete(r),!!this.scopesToLoad.has(r))return this.scopesToLoad.delete(r),this.scheduler.fast(),r;let t=this.loadAllDataPriority>0;this.settings.loadInBackground&&!t?this.scheduler.slow():this.scheduler.fast();for(let r of this.scopesToLoad)return this.scopesToLoad.delete(r),r;throw Error("No next scope to load")}async loadDocumentVersion(t){this.documentSize=t.length;let r=performance.now(),n=new q(t,this.settings);return this.canvasTreeVersion=n.canvasTreeVersion,this.parsingDuration+=performance.now()-r,g.debug("loadDocumentVersion",this.canvasTreeVersion,_(this.documentSize),w(this.loadingDuration)),await this.emitWrapped(()=>{if(this.scheduler.isDone())return;let s=performance.now();this.emit("loadedDocumentVersion",n.canvasTreeVersion),this.parsingDuration+=performance.now()-s}),this.partialParser=n,n}async loadFirstTree(t){let r=performance.now(),n=t.readFirstPage();this.scopesToLoad=t.getScopesToLoad();for(let s of this.scopesToLoad){let a=n.get(s);a&&(a.cache.isShallowLoad=!0)}return this.parsingDuration+=performance.now()-r,g.debug("loadFirstTree",w(this.parsingDuration)),await this.emitWrapped(()=>{if(this.scheduler.isDone())return;let s=performance.now();n.setService("loader",this),this.emit("loadedFirstData",n),L("parsingFirstPage"),this.parsingDuration+=performance.now()-s}),n}hasNextScopeToLoad(){return this.scopesToLoad.size>0}async loadNextScopeAsync(t){h(!this.currentLoadingScope,"already have a currently loading scope");let r=this.nextScopeIdToLoad();this.currentLoadingScope=new G(r,t);let n=await this.currentLoadingScope.run(this.scheduler);g.debug("loadScopeAsync:",r,w(n.duration),"scheduler mode:",this.scheduler.currentMode()),n.hasNode()&&await this.emitWrapped(()=>{if(this.scheduler.isDone())return;let s=performance.now(),a=n.take();this.currentLoadingScope=void 0,a&&(this.emit("loadedScope",a),this.parsingDuration+=n.duration+performance.now()-s,this.signalScopeLoadCallbacks(a.id))})}loadScope(t){if(h(this.partialParser,"loadScope before the parser is available"),this.currentLoadingScope?.id===t){let n=this.currentLoadingScope.force();return this.parsingDuration+=n.duration,this.currentLoadingScope=void 0,n.take()}if(this.prioritizedScopeIds.delete(t),!this.scopesToLoad.has(t))return;this.scopesToLoad.delete(t);let r=new G(t,this.partialParser).force();return this.parsingDuration+=r.duration,g.debug("loadScope:",t,w(r.duration)),this.signalScopeLoadCallbacks(t),r.take()}addScopeLoadCallback(t,r){if(!r)return;if(this.hasLoadedScope(t)){setTimeout(r);return}let n=this.loadCallbacksPerScope.get(t)??[];n.push(r),this.loadCallbacksPerScope.set(t,n)}signalScopeLoadCallbacks(t){setTimeout(()=>{let r=this.loadCallbacksPerScope.get(t);if(r){for(let n of r)n();this.loadCallbacksPerScope.delete(t)}})}async emitWrapped(t){this.settings.asyncEventWrapper?(await this.scheduler.yield(),await this.settings.asyncEventWrapper(t)):(await this.scheduler.yield(),t())}resetTreeForRecovery(t){t.setService("loader",this);for(let r of this.scopesToLoad){let n=t.get(r);n&&(n.cache.isShallowLoad=!0)}this.tree=t}async nodeIdsToLoad(){let t=performance.now(),r=new Set;if(!this.partialParser)return r;let n=performance.now();for(let s of this.scopesToLoad){performance.now()-n>50&&(await A(),n=performance.now());let a=this.partialParser.getParsedPageById(s);Ue(r,a)}for(let s of this.addedByDiff)r.add(s);for(let s of this.removedByDiff)r.delete(s);return g.debug("nodeIdsToLoad",r.size,w(performance.now()-t)),r}addNodeChanges(t){for(let r of t){let n=r.id;r.added?(this.addedByDiff.add(n),this.removedByDiff.delete(n)):r.removed&&(this.addedByDiff.delete(n),this.removedByDiff.add(n))}}};function Ue(i,e){if(e&&(i.add(e.id),!!e.children))for(let t of e.children)Ue(i,t)}var j=class{constructor(e,t){this.node=e;this.duration=t}hasNode(){return!!this.node}take(){let e=this.node;return this.node=void 0,e}},G=class{constructor(e,t){this.id=e;this.parser=t;o(this,"data");o(this,"loadedScope")}async run(e){if(this.loadedScope)return this.loadedScope;let t=performance.now();this.data=this.parser.getParsedPageById(this.id);let r=performance.now()-t;if(await e.yield(),this.loadedScope)return this.loadedScope;let n=performance.now(),s=this.parser.buildPage(this.data);return s&&(s.cache.isShallowLoad=!1),this.loadedScope=new j(s,r+performance.now()-n),this.loadedScope}force(){if(this.loadedScope)return this.loadedScope;let e=performance.now();this.data||(this.data=this.parser.getParsedPageById(this.id));let t=this.parser.buildPage(this.data);return t&&(t.cache.isShallowLoad=!1),this.loadedScope=new j(t,performance.now()-e),this.loadedScope}};var x=v("tree:timeline"),de=class{constructor(e){this.nodeChangesBuffers=e;o(this,"changes",new Map);this.nodeChangesBuffers.add(this)}trackChange(e,t){let r=this.changes.get(e);if(r){t&&r.push(t);return}this.changes.set(e,t?[t]:[])}read(){let e=this.changes;return this.changes=new Map,e}clear(){this.changes=new Map}dispose(){this.nodeChangesBuffers.delete(this)}},J=class{constructor(e,t,r=[],n=!1,s=!1){this.tree=e;this.changes=t;this.editReasons=r;this.wasRebase=n;this.wasCrdtRemote=s;o(this,"wasScopeInsert",!1);o(this,"version",0)}toDebugData(){return{version:this.version,changes:this.changes,editReasons:this.editReasons,wasScopeInsert:this.wasScopeInsert,wasRebase:this.wasRebase,wasCrdtRemote:this.wasCrdtRemote}}},H=class{constructor(){o(this,"idToChanges",new Map)}getChanges(){return Array.from(this.idToChanges.values())}addChanges(e){if(e)for(let t of e){let r=this.idToChanges.get(t.id);r||(r={id:t.id,to:{}},this.idToChanges.set(t.id,r)),te(r,t)}}},$=class{constructor(e,t){o(this,"tree");o(this,"entries");o(this,"latestReversibleNodeChanges",null);o(this,"enableAddRemoveOptimizations",!0);o(this,"trimmed",0);o(this,"isPartialLoading",!1);o(this,"localChangesSentToRemote",0);o(this,"remoteTreeIndex",0);o(this,"inErrorRecovery",!1);o(this,"nodeChangesBuffers",new Set);o(this,"legacyMode",!1);o(this,"remoteTreeVersion",0);o(this,"recentEditReasons",[]);o(this,"flagsForNextCommit");o(this,"extraChangesForNextCommit");o(this,"resetTime",0);o(this,"epoch",0);this.reset(e,t)}get localTreeIndex(){return this.trimmed+this.entries.length-1}setFlagsForNextCommit(e){this.flagsForNextCommit=e}setExtraChangesForNextCommit(e){this.extraChangesForNextCommit=e}recordEditReasons(e){e&&this.recentEditReasons.push(e)}trackChange(e,t=null){for(let r of this.nodeChangesBuffers)r.trackChange(e,t)}getTreeForVersion(e){if(!this.isPartialLoading)return ye(this.entries,t=>t.version===e)?.tree}addEntry(e,t,r=[],n=!1,s=!1){let a=new J(e,t,r,n,s);return this.entries.push(a),this.tree=e,a}getLastEntry(){let e=this.entries[this.entries.length-1];return h(e,"Timeline has no entries"),e}getEntry(e){return this.entries[e]}reset(e,t){if(this.resetTime=performance.now(),this.inErrorRecovery&&e===this.tree){x.debug("reset for error recovery..."),this.inErrorRecovery=!1,this.invalidateAllCursors(),this.clearNodeChangesReader();return}x.debug("reset with tree:",e.root.id,"size:",e.size()),this.entries=[],this.addEntry(e,t?.initialChanges??[],["load"]),this.recentEditReasons=[],this.flagsForNextCommit=void 0,this.extraChangesForNextCommit=void 0,this.latestReversibleNodeChanges=null,this.localChangesSentToRemote=0,this.trimmed=0,this.remoteTreeIndex=0,this.isPartialLoading=!!t?.isLoading,this.invalidateAllCursors(),this.clearNodeChangesReader()}invalidateAllCursors(){this.epoch+=1}openNodeChangesReader(){return new de(this.nodeChangesBuffers)}clearNodeChangesReader(){for(let e of this.nodeChangesBuffers)e.clear()}applyFlagsToChange(e){e&&this.flagsForNextCommit&&(this.flagsForNextCommit.ignoreInUndo&&(e.ignoreInUndo=!0),this.flagsForNextCommit.ignoreInCodeGeneration&&(e.ignoreInCodeGeneration=!0))}commitLocalTree(){let e=this.getLastEntry();h(this.tree===e.tree,"tree out of sync");let t={};this.tree=this.tree.commit((n,s)=>{if(!n&&!s)return;let a=B(n,s);if(this.applyFlagsToChange(a),this.trackChange(n?.id??s.id,a),a){if(a.to.parentid&&a.to.parentid!==a.from?.parentid){let c=this.tree.getScopeNodeAtStartFor(n),l=this.tree.getScopeNodeFor(s);c&&c?.id!==l?.id&&(a.previousScope=c.id)}t[a.id]=a}let d=[];Se(d,n,s);for(let c of d)this.applyFlagsToChange(c),this.trackChange(c.id,c),t[c.id]=c}),this.latestReversibleNodeChanges=Object.values(t);let r=this.latestReversibleNodeChanges;if(this.extraChangesForNextCommit){r=[...r];for(let n of this.extraChangesForNextCommit)this.applyFlagsToChange(n),this.trackChange(n.id,n),r.push(n)}return this.flagsForNextCommit=void 0,this.extraChangesForNextCommit=void 0,x.debug("commit local tree:",r.length,this.recentEditReasons),r.length>0?(h(e.tree!==this.tree,"must be a new tree"),e.tree.releaseMemory(),this.entries.push(new J(this.tree,r,this.recentEditReasons))):this.tree!==e.tree&&(e.tree.releaseMemory(),e.tree=this.tree),this.recentEditReasons=[],h(this.tree===this.getLastEntry().tree),this.tree}getLatestChangesForUndo(){return this.latestReversibleNodeChanges}getChangeTrackingCursor(){let e=this.remoteTreeIndex,t=this.localTreeIndex;return{remoteTree:e,localTree:t,timeline:this,tree:this.tree,epoch:this.epoch}}invalidatedByLoadCompletedDocument(e){return!(!e||this.trimmed>0||e.timeline!==this||e.epoch+1!==this.epoch||e.remoteTree+1!==this.remoteTreeIndex)}fetchForwardChanges(e){if(!e||e.epoch!==this.epoch||e.tree.lineage!==this.tree.lineage||e.tree.root.id!==this.tree.root.id||e.timeline!==this||e.localTree>0&&e.localTree<=this.trimmed||e.remoteTree>0&&e.remoteTree<=this.trimmed||this.remoteTreeIndex>0&&this.trimmed>0&&e.remoteTree===0)return;let t=e.localTree;if(this.remoteTreeIndex>0)for(t=e.remoteTree-1;t<e.localTree&&!this.entries[t+1-this.trimmed]?.wasRebase;)t+=1;h(t-this.trimmed>=0,"buffer cut too close to remoteTree"),h(t<=e.localTree,"startIndex incorrectly calculated");let r=this.localTreeIndex;h(t<=r,"bad change tracking cursor");let n=e.tree;return e.remoteTree=this.remoteTreeIndex,e.localTree=r,e.tree=this.tree,this.computeForwardChanges(t,r,n)}computeForwardChanges(e,t,r){if(e>=t)return[];let n={};for(let a=e+1;a<=t;a++){let d=this.entries[a-this.trimmed];if(!d.wasCrdtRemote)for(let c of d.changes){let l=c.id,u=n[l];u||(u=n[l]={id:l,to:{}});let m=u.added;te(u,c),!r&&m&&u.removed&&this.enableAddRemoveOptimizations&&delete n[l]}}let s=r??this.entries[e-this.trimmed].tree;return Object.values(n).filter(a=>{if(a.removed)return a.to={},!0;let d=s.getNodeAtStart(a.id);if(d)for(let[m,P]of Object.entries(a.to))ue(d[m],P)&&delete a.to[m];if(a.added||Object.keys(a.to).length>0)return!0;let c=a.toChildren;if(!c)return!1;if(!d)return!0;s.beginAllowPartialScopeAccess();let l=d.children;if(s.endAllowPartialScopeAccess(),!l)return!0;let u=l.length;if(u!==c.length)return!0;for(let m=0;m<u;m++)if(l[m].id!==c[m])return!0;return!1})}getEditReasons(e,t){let r=[],n="";for(let s=e+1;s<=t;s++){let a=this.entries[s-this.trimmed].editReasons;for(let d of a)d&&n!==d&&(n=d,r.push(d))}return r.join(" ")}getChangesBetweenEntries(e,t){h(e<t,"inconsistency in getting local changes to send");let r=this.computeForwardChanges(e,t),n=this.getEditReasons(e,t),s=t-e;return this.localChangesSentToRemote+=s,{count:s,changes:r,reasons:n}}debugOverwriteCurrentTree(e){x.debug("recover with tree:",e.root.id),this.tree=e,this.getLastEntry().tree=e}resetTreesForRecovery(e){x.info("reset trees for recovery, remote:",this.remoteTreeIndex,"local:",this.localTreeIndex,"changes already sent:",this.localChangesSentToRemote);let t=this.entries[e]?.tree;h(t,"unable to get remote tree");let r=t.getService("loader"),n=[];t=z(JSON.parse(JSON.stringify(t.toJS())),n),r&&(r.resetTreeForRecovery(t),h(t.getService("loader")===r,"tree must have the same loader")),n.length>0&&x.warn("[recovery] encountered errors while reloading the tree:",n),this.entries[e].tree=t,this.entries.length=1+e+this.localChangesSentToRemote;let s=t;for(e+=1;e<this.entries.length;e++){let a=this.entries[e];T(t,a.changes),t=t.commitDiffs(),a.tree=t,t!==s&&(s.releaseMemory(),s=t)}return this.inErrorRecovery=!0,this.tree=t,t}saveTimelineDataForRecovery(){if(window.localStorage)try{let e=`debugTimelineAtRecovery-${Math.floor(Math.random()*100)}`,t={date:new Date().toString(),entries:this.entries.map(r=>r.toDebugData())};window.localStorage.setItem(e,JSON.stringify(t))}catch(e){x.warn("failed to store timeline in localStorage:",e)}}};var Me=class{constructor(){o(this,"undoBuffer",[]);o(this,"redoBuffer",[]);o(this,"undoGroup",[]);o(this,"scheduledEndUndoGroup")}canUndo(){return this.undoBuffer.length>0}peekUndo(){return this.undoBuffer.at(-1)}undo(e,t){let r=this.undoBuffer.pop();if(k(r))return;se(e,r.changes),this.redoBuffer.push({...r,...t});let n=this.undoBuffer.length;return this.undoGroup.forEach((s,a)=>{this.undoGroup[a]=Math.min(s,n)}),r}canRedo(){return this.redoBuffer.length>0}peekRedo(){return this.redoBuffer.at(-1)}redo(e,t){let r=this.redoBuffer.pop();if(!k(r))return T(e,r.changes),this.undoBuffer.push({...r,...t}),r}beginUndoGroup(){this.undoGroup.push(this.undoBuffer.length)}discardUndoGroup(e){let t=this.undoGroup.pop();if(k(t)||t>=this.undoBuffer.length)return;let r=this.undoBuffer.splice(t),n=re(r);return se(e,n),r[0]}scheduleEndUndoGroup(){let e=this.undoGroup.pop();k(e)||e>=this.undoBuffer.length||(this.scheduledEndUndoGroup=e)}processScheduledEndUndoGroup(e){let t=this.scheduledEndUndoGroup;if(this.scheduledEndUndoGroup=void 0,k(t)||t>=this.undoBuffer.length)return;let r=this.undoBuffer.splice(t),n=re(r);this.undoBuffer.push({changes:n,...e})}clearUndoStack(){this.undoBuffer.length=0,this.redoBuffer.length=0}addUndoEntry(e){this.undoBuffer.push(e),this.redoBuffer.length=0}getUndoBufferSize(){return this.undoBuffer.length}};var f=Ge(Je());var Ye=0,X=class{constructor(){o(this,"id",++Ye);o(this,"currentRtt",NaN);o(this,"rtts",[]);o(this,"rttIndex",0);o(this,"pending",Array.from(Array(128),()=>({type:"",time:0})));o(this,"start",0);o(this,"end",0);o(this,"overflow",0);o(this,"lastSendTime",0);o(this,"bytesSent",0);o(this,"bytesReceived",0)}read(){let{bytesSent:e,bytesReceived:t,id:r}=this;return this.bytesSent=0,this.bytesReceived=0,[e,t,this.rtt(),r]}computeRtt(){let e=this.rtts.length;if(e===0){this.currentRtt=NaN;return}let t=0;for(let r of this.rtts)t+=r;this.currentRtt=t/e}lastSend(){return this.lastSendTime}rtt(){return Number.isNaN(this.currentRtt)&&this.computeRtt(),Math.max(this.currentRtt||0,this.pendingRtt())}pendingRtt(){return this.start===this.end?0:performance.now()-this.pending[this.start].time}pendingCount(e){if(!e)return this.start>this.end?128-this.start+this.end:this.end-this.start;let t=0;for(let r=this.start;r!==this.end;r=r+1&127)this.pending[r].type===e&&t++;return t}sent(e,t){this.bytesSent+=t.length,this.end===(this.start===0?127:this.start-1)&&(this.start=this.start+1&127,this.overflow++);let r=this.pending[this.end];r.type=e,r.time=performance.now(),this.end=this.end+1&127,this.lastSendTime=r.time}received(e){this.bytesReceived+=e.length}acked(){if(this.start===this.end){console.warn("Called SocketStats.acked() with empty buffer");return}if(this.overflow>0){this.overflow--;return}let e=this.pending[this.start],t=performance.now()-e.time;this.rtts.length<32?this.rtts.push(t):(this.rtts[this.rttIndex]=t,this.rttIndex=this.rttIndex+1&31),this.start=this.start+1&127,this.currentRtt=NaN}};var D=v("remote:socket"),Ke=23;function Qe(i){switch(i){case"AccessDenied":case"ClientNeedsUpdate":case"ClientTooNew":case"DocumentNotFound":case"UnsupportedSchema":case"UnknownPermanentError":case"ClientSidePermanentError":return!1;case"ReconnectToNewServer":case"UnknownRecoverableError":case"ClientSideRecoverableError":return!0;default:return ce(i)}}function er({url:i,documentConnection:e,tunnel:t=null}){let r=(0,f.useRef)(null),n=(0,f.useRef)(!0),s=(0,f.useRef)({onConnect:new Set,onDisconnect:new Set,onMessage:new Set}),a=(0,f.useRef)(i),d=(0,f.useRef)(!0),c=(0,f.useRef)(void 0);function l(){c.current!==void 0&&(window.clearTimeout(c.current),c.current=void 0)}let u=(0,f.useCallback)(()=>{d.current=!1;let p=r.current;p&&p.ws.readyState<WebSocket.CLOSING&&(p.clientClosed=!0,p.ws.close())},[]),m=(0,f.useCallback)(()=>{if(l(),!d.current||r.current)return;function p(y){c.current===void 0&&(c.current=window.setTimeout(()=>{c.current=void 0,navigator.onLine&&!document.hidden&&m()},y))}let C=new URL(a.current);if(C.searchParams.set("v",Ke.toString()),C.searchParams.set("tunnel",t||""),Ee()&&C.searchParams.set("mode","crdt"),e.treeSchema<=0)return;C.searchParams.set("treeSchema",e.treeSchema.toString()),C.searchParams.set("treeVersion",e.treeVersion.toString()),D.debug("connecting to",C.href);let _e=performance.now(),I=new WebSocket(C.href),E=new X,K={ws:I,stats:E,clientClosed:!1};e.setSocketStats(E);let F=0;I.addEventListener("open",()=>{D.debug("open"),F=window.setInterval(()=>{if(performance.now()-E.lastSend()<1e3||E.pendingCount("ping")>1||I.readyState!==WebSocket.OPEN)return;let y="ping {}";I.send(y),E.sent("ping",y)},1e3);for(let y of s.current.onConnect)try{y(n.current)}catch(S){D.warn("Error in onConnect handler:",S)}n.current=!1}),I.addEventListener("close",y=>{let S=et(y);if(D.debug("close:",S,"clientClosed:",K.clientClosed,y),F!==0&&(clearInterval(F),F=0),r.current===K){Qe(S)||(d.current=!1);for(let b of s.current.onDisconnect)try{b(S)}catch(Q){D.warn("Error in onDisconnect handler:",Q)}if(r.current=null,d.current){let b=1e3;S==="ReconnectToNewServer"?b=50:performance.now()-_e<5e3&&(b=5e3),p(b)}}}),I.addEventListener("message",y=>{try{let S=y.data;E.received(S);let b=tt(S);if(b.type==="ack"){E.acked();return}else b.type==="redirect"&&(a.current=b.value.url);for(let Q of s.current.onMessage)try{Q(b)}catch(je){D.warn("Error in onMessage handler:",je)}}catch(S){D.warn("Error receiving:",S)}}),r.current=K},[e]);(0,f.useEffect)(()=>{m()},[m]);let P=(0,f.useCallback)(({online:p,visible:C})=>{p&&C?m():l()},[m]);return Ze(P),(0,f.useMemo)(()=>({getSocketStats(){return r.current?.stats},connect(){d.current=!0,m()},disconnect(){u()},onConnect(p){return s.current.onConnect.add(p),()=>{s.current.onConnect.delete(p)}},onDisconnect(p){return s.current.onDisconnect.add(p),()=>{s.current.onDisconnect.delete(p)}},onMessage(p){return s.current.onMessage.add(p),()=>{s.current.onMessage.delete(p)}},send(p){if(!r.current||r.current.ws.readyState!==1){p.type!=="state"&&D.warn("Dropping",p.type,"message.");return}try{let C=`${p.type} ${JSON.stringify(p.value)}`;r.current.ws.send(C),r.current.stats.sent(p.type,C)}catch(C){D.warn("Error sending",p.type,"message:",C)}}}),[m,u])}function Ze(i){(0,f.useEffect)(()=>{document.addEventListener("visibilitychange",e),window.addEventListener("online",e),window.addEventListener("offline",e);function e(){i({online:navigator.onLine,visible:!document.hidden})}return()=>{document.removeEventListener("visibilitychange",e),window.removeEventListener("online",e),window.removeEventListener("offline",e)}},[i])}function et(i){switch(i.reason){case"ERR_RECONNECT_TO_NEW_SERVER":return"ReconnectToNewServer";case"ERR_ACCESS_DENIED":return"AccessDenied";case"ERR_CLIENT_NEEDS_UPDATE":return"ClientNeedsUpdate";case"ERR_DOCUMENT_NOT_FOUND":return"DocumentNotFound";case"ERR_UNSUPPORTED_SCHEMA_VERSION":return"UnsupportedSchema";case"ERR_INVALID_OPERATION":return"ClientSidePermanentError";case"ERR_UNKNOWN":return"UnknownPermanentError"}return i.code===1011?"ClientNeedsUpdate":"UnknownRecoverableError"}function tt(i){let e=i.indexOf(" "),t=i.indexOf(" ",e+1);h(e>=0&&t>=0,"Invalid data");let r=i.substring(0,e),n=i.substring(e+1,t),s=i.substring(t+1),a=JSON.parse(s);return{id:r,type:n,value:a}}function rr(i){let{session:e,seq:t,count:r,reasons:n,changes:s}=i;return{session:e,seq:t,changes:s,count:r,reasons:n}}function Fe(i,e){return{...i,next:e}}function Ae(i){return typeof i=="object"&&i!==null&&"next"in i}function Oe(i){return Ae(i)&&"session"in i}function Ve(i){return Ae(i)&&"changes"in i&&Array.isArray(i.changes)}function Be(i){if(!i.children)return;let e=new Map;for(let t of i.children)pe(t)&&e.set(t.id,{master:t,replicas:new Map});for(let t of i.children){if(!ge(t))continue;let r=e.get(t.replicaInfo.master);r&&r.replicas.set(t.id,t)}for(let{master:t,replicas:r}of e.values())rt(t,r)}function rt(i,e){for(let t of e.values()){let r=t.replicaInfo;h(r.master===i.id,"Replica must match master");let n=r.overrides;if(r.inheritsFrom){let m=e.get(r.inheritsFrom);m&&(n=ve(n,m.replicaInfo.overrides))}let s=n[i.id],a=t.duplicatedFrom;ee.copyToNode(t,i,s),t.duplicatedFrom=a;let d=!1;fe(t)&&(d=!0,Ce(t,n,i),Z(i,t));let c=t.id,l=i.children;if(!l)return;let u=new Array(l.length);for(let m=0,P=l.length;m<P;m++)u[m]=ze(c,n,l[m],c,d);t.children=u}}function ze(i,e,t,r,n){let s=V({__class:t.__class,id:i+t.id,parentid:r});h(s,"Failed to create replica node");let a=e[t.id];if(ee.copyToNode(s,t,a),s.duplicatedFrom=null,n&&Z(t,s),t.children){let d=t.children,c=new Array(d.length);for(let l=0,u=d.length;l<u;l++)c[l]=ze(i,e,d[l],s.id,n);s.children=c}return s}var R=v("remote:sync"),qe=2**52,Y=class{constructor(e,t=0,r,n){o(this,"rollingDiff",null);o(this,"session",Math.floor(Math.random()*qe));o(this,"seq",0);o(this,"treeVersion",0);o(this,"updatesSeen",0);o(this,"init",0);o(this,"expectingInitialUpdates",0);o(this,"timeline");o(this,"localUpdatesInFlight",[]);o(this,"localUpdatesAtInit",[]);o(this,"hasError",!1);o(this,"waitingForTree",!1);r?this.timeline=r:this.timeline=new $(e),this.setTree(e,t,n)}get waitingForInitialUpdates(){return this.expectingInitialUpdates>this.updatesSeen}get isLoading(){return this.waitingForTree||this.waitingForInitialUpdates}get isReady(){return!(this.hasError||this.waitingForTree||this.waitingForInitialUpdates)}get tree(){return this.timeline.tree}error(e){return this.hasError=!0,Error(e)}verify(e,t){let r=this.timeline.getTreeForVersion(e);if(!r)return R.info("verify: unable to find tree with version",e),!0;let n=r.computeTreeHash();if(n!==t){if(R.warn("verify: failed",n,"!==",t),t===0)return!0;R.reportError("Tree verification failed",{localHash:n,serverHash:t,treeVersion:e,treeSize:r.size()})}else R.debug("verify: passed; hash:",t);return n===t}setTree(e,t,r){R.info("setTree",t),this.timeline.reset(e,r),this.setRemoteTreeVersion(t),!!r?.isLoading&&U.isOn("rollingDiff")&&(this.rollingDiff=new H,this.rollingDiff.addChanges(r?.initialChanges)),this.treeVersion=t,this.waitingForTree=!1,this.hasError=!1,this.localUpdatesInFlight=[]}resetSession(){this.treeVersion=0,this.session=Math.floor(Math.random()*qe),this.localUpdatesInFlight=[],this.localUpdatesAtInit=[]}debugResetSessionAndTree(e){this.resetSession(),this.setTree(e,0)}handleInit(e,t,r,n){this.init+=1,this.init===1&&L("wsTreeInitMessages"),R.info("init",this.init,{treeVersion:e,initialUpdates:t,localTreeVersion:this.treeVersion}),R.debug("init updates:",{seen:this.updatesSeen,inFlight:this.localUpdatesInFlight.length,previous:this.localUpdatesAtInit.length}),this.hasError=!1,this.expectingInitialUpdates=t,this.updatesSeen=0,this.localUpdatesAtInit=this.localUpdatesInFlight.slice(),(this.treeVersion!==e||this.waitingForTree)&&(this.waitingForTree=!0,n(r,e))}trimForShallowLoading(){let e=this.timeline,t=this.getRemoteIndex()-3;t<=0||(e.trimmed+=t,R.debug("trim",t,"new offset:",e.trimmed,"entries.length:",e.entries.length,"after load"),e.entries.splice(0,t))}loadedAllScopes(){let e=this.timeline;R.info("done loading, took:",Math.round((performance.now()-e.resetTime)/100)/10,"seconds"),h(e.isPartialLoading,"Must be in loading mode"),e.isPartialLoading=!1,this.rollingDiff=null;let t=this.getRemoteEntry();t&&(t.version=e.remoteTreeVersion,this.trimForShallowLoading())}loadOneScope(e,t){let r=this.timeline;R.debug("loadOneScope:",e.id),h(r.isPartialLoading,"Must be loading"),h(!e.cache.isShallowLoad,"Scope must not be shallow");let n=this.getRemoteEntry();h(n,"remote tree is missing");let s=r.tree.isViewOnly;n.tree.editClosed=!1,n.tree.isViewOnly=!1,n.tree.inEditor=!1,n.tree.makeLatest();let a=new Set,d=n.tree.root.children.findIndex(l=>l.id===e.id);if(e.__class==="WebPageNode"||e.__class==="SmartComponentNode"){Be(e),n.tree=n.tree.commitWithLoadedScope(e);for(let l of e.walk())r.trackChange(l.id),a.add(l.id)}else n.tree.remove(e.id),n.tree.insertNode(e,n.tree.root.id,d);if(this.rollingDiff){let l=this.rollingDiff.getChanges();a.size>0?ne(l,a)&&T(n.tree,l):T(n.tree,l)}else{let l=0,u=a.size>0,m=this.getRemoteIndex();for(let P of r.entries){if(l>m)break;l++,!P.wasScopeInsert&&(u&&!ne(P.changes,a)||(u=!1,T(n.tree,P.changes)))}}d===-1?h(!n.tree.get(e.id),"Scope must have been deleted by remote diffs"):n.tree.loadReplicasAndCodeComponents(e);let c=n.tree.commit((l,u)=>{let m=l?.id??u?.id;m&&r.trackChange(m)});return n.tree.inEditor=!0,c.inEditor=!0,this.incrementRemoteTreeIndex(),t||(r.latestReversibleNodeChanges=null),this.addTreeToTimeline(c),r.legacyMode&&r.invalidateAllCursors(),c.isViewOnly=s,this.rollingDiff&&this.trimForShallowLoading(),r.tree}getRemoteEntry(){return this.timeline.getEntry(this.getRemoteIndex())}setRemoteTreeVersion(e){if(this.timeline.remoteTreeVersion=e,this.timeline.isPartialLoading)return;let t=this.getRemoteEntry();h(t,"remote tree is missing"),t.version=e}};var N=v("remote:sync"),We=class extends Y{handleRemoteUpdate(e){if(this.hasError||this.waitingForTree)return;h(typeof e.next=="number","must be a valid tree update");let t=e.next;if(N.trace("this:",this.session,this.seq,"at:",this.treeVersion,"update:",e),t!==this.treeVersion+1){if(t<=this.treeVersion){N.debug("ignoring old update:",t," <= ",this.treeVersion);return}throw this.error("missing update: "+this.treeVersion+" + 1 != "+t)}if(this.updatesSeen+=1,this.treeVersion=t,Oe(e)&&e.session===this.session){let r=this.localUpdatesInFlight[0];if(r?.seq===e.seq)this.localUpdatesInFlight.shift(),this.confirmLocalChangesByRemote(r.count,t),r.confirmed=!0;else{let n=this.localUpdatesAtInit.find(s=>s.seq===e.seq);if(n)this.insertRemoteChanges(n.changes,t),n.confirmed=!0;else{let s=this.localUpdatesInFlight.findIndex(d=>d.seq===e.seq),a=s===-1?"unknown local update: "+e.seq+" != "+r?.seq:"missing local update: "+e.seq+" != "+r?.seq+", is index: "+s;throw this.error(a)}}}else Ve(e)?e.changes.length>0&&this.insertRemoteChanges(e.changes,t):N.reportErrorOncePerMinute(new Error("Unknown remote update"),{update:e})}confirmLocalChangesByRemote(e,t=0){let r=this.timeline;if(h(e>=1,"cannot confirm less than one change"),h(r.localChangesSentToRemote>=e,"cannot confirm local changes that have not been sent"),h(r.remoteTreeIndex<r.localTreeIndex,"must have unconfirmed local changes"),this.rollingDiff)for(let n=1;n<=e;n++)this.rollingDiff.addChanges(r.getEntry(r.remoteTreeIndex+n)?.changes);return r.localChangesSentToRemote-=e,r.remoteTreeIndex+=e,this.setRemoteTreeVersion(t),r.tree}insertRemoteChanges(e,t=0){let r=this.timeline;N.debug("insertRemoteChanges:",e.length),h(r.tree===r.getLastEntry().tree,"tree out of sync"),h(r.remoteTreeIndex<=r.localTreeIndex,"remote tree too far ahead"),this.rollingDiff&&this.rollingDiff.addChanges(e);let n=this.getRemoteEntry();h(n,"remote tree is missing");let s=r.tree.isViewOnly;n.tree.editClosed=!1,n.tree.isViewOnly=!1,n.tree.makeLatest(),n.tree.beginAllowPartialScopeAccess(),T(n.tree,e);let a=n.tree.commitDiffs();for(let c of e)r.trackChange(c.id,c);for(let c of n.tree.getNodesChangedByCommit())r.trackChange(c.id);r.remoteTreeIndex+=1,r.latestReversibleNodeChanges=null;let d=r.entries.length-this.getRemoteIndex();return h(d>=0,"computed rebase is off"),d===0?this.addRemoteTreeWithChanges(a,e):this.rebaseRemoteTreeWithChanges(a,e,d),this.trim(),this.setRemoteTreeVersion(t),n.tree.endAllowPartialScopeAccess(),a.isViewOnly=s,r.tree}addRemoteTreeWithChanges(e,t){N.trace("addRemoteTreeWithChanges:",t.length);let r=this.timeline.getLastEntry();return h(e.lineage===r.tree.lineage,"Trees must belong to the same line."),h(!e.hasUncommittedChanges(),"Tree cannot have uncommitted changes."),r.tree!==e&&r.tree.releaseMemory(),this.timeline.addEntry(e,t)}rebaseRemoteTreeWithChanges(e,t,r){let n=this.timeline;N.debug("rebaseRemoteTreeWithChanges:",r,"changes:",t.length),h(e.lineage===n.getLastEntry().tree.lineage,"Trees must belong to the same line."),h(!e.hasUncommittedChanges(),"Tree cannot have uncommitted changes."),h(n.entries.length>=r,"rebase",r,"> commits",n.entries.length);let s=n.entries.splice(n.entries.length-r,r);h(s.length===r,"must have",r,"entries to process");let a=n.addEntry(e,t,[],!0),d=e;for(let c=0;c<r;c++){let l=s[c];T(e,l.changes),e=e.commitDiffs();for(let u of l.changes)n.trackChange(u.id,u);for(let u of d.getNodesChangedByCommit())n.trackChange(u.id);n.addEntry(e,l.changes,l.editReasons,l.wasRebase),e!==d&&(d.releaseMemory(),d=e)}return n.tree=e,a}addTreeToTimeline(e){let r=this.timeline.entries.length-this.getRemoteIndex();h(r>=0,"computed rebase is off");let n;r===0?n=this.addRemoteTreeWithChanges(e,[]):n=this.rebaseRemoteTreeWithChanges(e,[],r),n.wasScopeInsert=!0}loadCompleteTree(e,t=0){let r=this.timeline;N.debug("load complete tree:",r.tree.sizeAtStart(),"->",e.size(),"entries:",r.entries.length),h(r.trimmed===0,"cannot load complete tree while having local changes"),h(!e.hasUncommittedChanges(),"tree should be clean"),r.entries.forEach((d,c)=>{c>r.remoteTreeIndex||T(e,d.changes)}),e.hasUncommittedChanges()&&(e=e.commitDiffs());let n=[],s=r.tree;if(s.sizeAtStart()*2>e.size()){let d={};for(let c of e.root.walk()){let l=s.getNodeAtStart(c.id)||void 0,u=B(l,c);u&&(d[u.id]=u),r.trackChange(c.id,u)}n=Object.values(d),N.debug("load complete tree, diff:",n.length)}else r.invalidateAllCursors(),N.debug("load complete tree, resending:",r.tree.size());r.remoteTreeIndex+=1,r.latestReversibleNodeChanges=null;let a=r.entries.length-r.remoteTreeIndex;return h(a>=0,"computed rebase is off"),e.lineage!==r.tree.lineage?(r.reset(e),this.setRemoteTreeVersion(t),r.tree):(a===0?this.addRemoteTreeWithChanges(e,n):this.rebaseRemoteTreeWithChanges(e,n,a),this.setRemoteTreeVersion(t),this.trim(),r.tree.forEachNode(d=>r.trackChange(d.id)),r.tree)}incrementRemoteTreeIndex(){this.timeline.remoteTreeIndex+=1}getRemoteIndex(){return this.timeline.remoteTreeIndex-this.timeline.trimmed}getUnconfirmedChangeCount(){return this.timeline.localTreeIndex-this.timeline.remoteTreeIndex}hasChangesForRemote(){let e=this.timeline.remoteTreeIndex+this.timeline.localChangesSentToRemote,t=this.timeline.localTreeIndex;return h(e<=t,"inconsistency in getting local changes to send"),e<t}hasOnlyEmptyChangesForRemote(){let e=this.timeline.remoteTreeIndex+this.timeline.localChangesSentToRemote,t=this.timeline.localTreeIndex;return e>=t?!0:this.timeline.computeForwardChanges(e,t).length===0}createUpdateToSend(){if(!this.isReady)throw Error("cannot create updates while not ready");if(!this.hasChangesForRemote())return null;let{changes:e,count:t,reasons:r}=this.getForwardChangesForRemote(),n=++this.seq,s={session:this.session,seq:n,changes:e,count:t,reasons:r,confirmed:!1};return this.localUpdatesInFlight.push(s),s}getForwardChangesForRemote(){let e=this.timeline.remoteTreeIndex+this.timeline.localChangesSentToRemote,t=this.timeline.localTreeIndex;return this.timeline.getChangesBetweenEntries(e,t)}trimForShallowLoading(){super.trimForShallowLoading(),h(this.timeline.remoteTreeIndex===0||this.getRemoteIndex()>=0,"must have some buffer before remoteTreeIndex")}commitAndCreateUpdate(e=0){h(O.isTest),this.timeline.commitLocalTree();let t=this.createUpdateToSend();return t?Fe(t,e):null}resetTreesForRecovery(){return this.timeline.resetTreesForRecovery(this.getRemoteIndex())}trim(){if(this.timeline.isPartialLoading)return;let e=0;this.timeline.remoteTreeIndex>0?e=this.getRemoteIndex()-100:e=this.timeline.localTreeIndex-this.timeline.trimmed-100,!(e<=75)&&(this.timeline.trimmed+=e,N.debug("trim",e,"new offset:",this.timeline.trimmed,"entries.length:",this.timeline.entries.length),this.timeline.entries.splice(0,e),h(this.timeline.remoteTreeIndex===0||this.getRemoteIndex()>=0,"must have some buffer before remoteTreeIndex"))}};export{$ as a,dt as b,ct as c,lt as d,oe as e,_ as f,w as g,ke as h,j as i,Me as j,X as k,Ke as l,Qe as m,er as n,et as o,tt as p,Y as q,rr as r,Oe as s,Ve as t,We as u};
//# sourceMappingURL=https://app.framerstatic.com/chunk-OY6MDLSR.mjs.map
